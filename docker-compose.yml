version: "2.2"

services:
  # cosmosdb:
  #   image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
  #   container_name: azure-cosmosdb-linux-emulator
  #   hostname: "azure-cosmosdb-linux-emulator"
  #   tty: true
  #   mem_limit: 12GB
  #   cpu_count: 8
  #   networks:
  #      - poc-be
  #   ports:
  #     - 8082:8081
  #     - 10251:10251
  #     - 10252:10252
  #     - 10253:10253
  #     - 10254:10254
  #   expose:
  #     - "8082"
  #     - "10251-10255"
  #   environment:
  #     - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
  #     - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
  #     - AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=127.0.0.1

  storage-account:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: storage-account
    restart: always
    command: "azurite --blobHost 0.0.0.0 --blobPort 20003 --queueHost 0.0.0.0 --queuePort 20004 --tableHost 0.0.0.0 --tablePort 20005"
    ports:
      - "20003:20003"
      - "20004:20004"
      - "20005:20005"
    networks:
       - poc-be

  enqueue-ms:
    container_name: enqueue-ms
    restart: always
    build:
      context: ./enqueue-ms
      dockerfile: Dockerfile
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    env_file:
      - ./enqueue-ms/.composenv
    expose:
      - "3000"
    ports:
      - "3000:3000"
    command: ["yarn", "start"]
    networks:
      - poc-be

  scout-ms:
    depends_on:
      - storage-account
    container_name: scout-ms
    restart: always
    build:
      context: ./scout-ms
      dockerfile: Dockerfile
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    env_file:
      - ./scout-ms/.composenv
    expose:
      - "3001"
    ports:
      - "3001:3001"
    command: ["yarn", "start"]
    networks:
      - poc-be
  
  # load-test:
  #   depends_on:
  #     - rabbitmq
  #     - storage-account
  #     - scout-ms
  #     - enqueue-ms
  #   container_name: load-test
  #   links:
  #     - enqueue-ms:api.localhost
  #   build:
  #     context: ./load-test
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./load-test/.dockerenv
  #   command: run /dist/bulk_document.js
  #   networks:
  #     - poc-be

volumes:
  certs:
    driver: local

networks:
  poc-be:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450